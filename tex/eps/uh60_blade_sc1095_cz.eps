%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../eps/uh60_blade_sc1095_cz.eps
%%Creator: gnuplot 5.2 patchlevel 2
%%CreationDate: Sat Feb  8 11:45:27 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 446 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 446 50 lineto 446 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../eps/uh60_blade_sc1095_cz.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Feb  8 11:45:27 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7920.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 576 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 576 M
63 0 V
stroke
774 576 M
[ [(Helvetica) 180.0 0.0 true true 0 (-1.5)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 1290 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 1290 M
63 0 V
stroke
774 1290 M
[ [(Helvetica) 180.0 0.0 true true 0 (-1)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 2004 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 2004 M
63 0 V
stroke
774 2004 M
[ [(Helvetica) 180.0 0.0 true true 0 (-0.5)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 2718 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 2718 M
63 0 V
stroke
774 2718 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 3431 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 3431 M
63 0 V
stroke
774 3431 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 4145 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 4145 M
63 0 V
stroke
774 4145 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 4859 M
6713 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 4859 M
63 0 V
stroke
774 4859 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1.5)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
882 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
882 576 M
0 63 V
0 4220 R
0 -63 V
stroke
882 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (-180)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1441 576 M
0 4220 V
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1441 576 M
0 63 V
0 4220 R
0 -63 V
stroke
1441 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (-150)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2001 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2001 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2001 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (-120)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2560 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2560 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2560 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (-90)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3120 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3120 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3120 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (-60)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3679 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3679 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3679 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (-30)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4239 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4239 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4239 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4798 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4798 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4798 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5357 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5357 576 M
0 63 V
0 4220 R
0 -63 V
stroke
5357 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5917 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5917 576 M
0 63 V
0 4220 R
0 -63 V
stroke
5917 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 90)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6476 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6476 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6476 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 120)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
7036 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
7036 576 M
0 63 V
0 4220 R
0 -63 V
stroke
7036 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 150)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
7595 576 M
0 4283 V
stroke
1.000 UL
LTb
LCb setrgbcolor
7595 576 M
0 63 V
0 4220 R
0 -63 V
stroke
7595 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 180)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2.000 UL
LTa
LCb setrgbcolor
882 2718 M
6713 0 V
stroke
LTa
LCb setrgbcolor
4239 576 M
0 4283 V
stroke
1.000 UL
LTB
LCb setrgbcolor
882 4859 N
882 576 L
6713 0 V
0 4283 V
-6713 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
162 2717 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Lift Coefficient [-])]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
4238 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (Angle of Attack [deg])]
] -60.0 MCshow
LTb
% Begin plot #1
0.000 UP
4.000 UL
LTb
0.27 0.45 0.65 C 919 3084 M
38 366 V
37 367 V
37 -22 V
37 -21 V
38 -21 V
37 -22 V
37 -21 V
38 -22 V
37 -21 V
37 -22 V
38 108 V
37 107 V
37 107 V
37 107 V
38 -47 V
37 -46 V
37 -46 V
38 -47 V
37 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
38 -47 V
37 -46 V
37 -46 V
38 -47 V
37 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
38 -47 V
37 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
38 -47 V
37 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
37 -46 V
38 -47 V
37 -46 V
37 6 V
38 5 V
37 -8 V
37 20 V
38 5 V
37 6 V
37 6 V
37 -140 V
38 494 V
37 505 V
37 257 V
38 -285 V
37 -86 V
37 371 V
38 314 V
37 304 V
37 310 V
37 300 V
38 314 V
37 300 V
37 214 V
38 -214 V
37 -171 V
37 4 V
37 4 V
38 4 V
37 4 V
37 4 V
38 4 V
37 4 V
37 -46 V
38 -47 V
37 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
38 -46 V
37 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -46 V
37 -46 V
38 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
38 -46 V
37 -47 V
37 -47 V
37 -45 V
38 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
37 -46 V
38 -47 V
37 -46 V
37 -46 V
38 -47 V
37 -46 V
37 -47 V
38 -46 V
37 -46 V
37 -47 V
37 -46 V
38 -47 V
37 -46 V
37 -46 V
38 -61 V
37 121 V
37 107 V
37 107 V
38 108 V
37 -22 V
37 -21 V
38 -22 V
37 -21 V
37 -22 V
38 -21 V
37 -21 V
37 -22 V
37 367 V
38 366 V
37 367 V
919 3084 Pls
957 3450 Pls
994 3817 Pls
1031 3795 Pls
1068 3774 Pls
1106 3753 Pls
1143 3731 Pls
1180 3710 Pls
1218 3688 Pls
1255 3667 Pls
1292 3645 Pls
1330 3753 Pls
1367 3860 Pls
1404 3967 Pls
1441 4074 Pls
1479 4027 Pls
1516 3981 Pls
1553 3935 Pls
1591 3888 Pls
1628 3842 Pls
1665 3795 Pls
1702 3749 Pls
1740 3703 Pls
1777 3656 Pls
1814 3610 Pls
1852 3563 Pls
1889 3517 Pls
1926 3471 Pls
1964 3424 Pls
2001 3378 Pls
2038 3331 Pls
2075 3285 Pls
2113 3239 Pls
2150 3192 Pls
2187 3146 Pls
2225 3099 Pls
2262 3053 Pls
2299 3007 Pls
2336 2960 Pls
2374 2914 Pls
2411 2867 Pls
2448 2821 Pls
2486 2775 Pls
2523 2728 Pls
2560 2682 Pls
2598 2635 Pls
2635 2589 Pls
2672 2543 Pls
2709 2496 Pls
2747 2450 Pls
2784 2403 Pls
2821 2357 Pls
2859 2311 Pls
2896 2264 Pls
2933 2218 Pls
2970 2171 Pls
3008 2125 Pls
3045 2079 Pls
3082 2032 Pls
3120 1986 Pls
3157 1939 Pls
3194 1893 Pls
3232 1847 Pls
3269 1800 Pls
3306 1754 Pls
3343 1707 Pls
3381 1661 Pls
3418 1615 Pls
3455 1568 Pls
3493 1522 Pls
3530 1475 Pls
3567 1429 Pls
3604 1383 Pls
3642 1336 Pls
3679 1290 Pls
3716 1296 Pls
3754 1301 Pls
3791 1293 Pls
3828 1313 Pls
3866 1318 Pls
3903 1324 Pls
3940 1330 Pls
3977 1190 Pls
4015 1684 Pls
4052 2189 Pls
4089 2446 Pls
4127 2161 Pls
4164 2075 Pls
4201 2446 Pls
4239 2760 Pls
4276 3064 Pls
4313 3374 Pls
4350 3674 Pls
4388 3988 Pls
4425 4288 Pls
4462 4502 Pls
4500 4288 Pls
4537 4117 Pls
4574 4121 Pls
4611 4125 Pls
4649 4129 Pls
4686 4133 Pls
4723 4137 Pls
4761 4141 Pls
4798 4145 Pls
4835 4099 Pls
4873 4052 Pls
4910 4006 Pls
4947 3960 Pls
4984 3913 Pls
5022 3867 Pls
5059 3820 Pls
5096 3774 Pls
5134 3728 Pls
5171 3681 Pls
5208 3635 Pls
5245 3588 Pls
5283 3542 Pls
5320 3496 Pls
5357 3449 Pls
5395 3403 Pls
5432 3356 Pls
5469 3310 Pls
5507 3264 Pls
5544 3217 Pls
5581 3171 Pls
5618 3124 Pls
5656 3078 Pls
5693 3032 Pls
5730 2985 Pls
5768 2939 Pls
5805 2892 Pls
5842 2846 Pls
5879 2800 Pls
5917 2753 Pls
5954 2707 Pls
5991 2660 Pls
6029 2614 Pls
6066 2568 Pls
6103 2521 Pls
6141 2475 Pls
6178 2428 Pls
6215 2381 Pls
6252 2336 Pls
6290 2289 Pls
6327 2243 Pls
6364 2196 Pls
6402 2150 Pls
6439 2104 Pls
6476 2057 Pls
6513 2011 Pls
6551 1964 Pls
6588 1918 Pls
6625 1872 Pls
6663 1825 Pls
6700 1779 Pls
6737 1732 Pls
6775 1686 Pls
6812 1640 Pls
6849 1593 Pls
6886 1547 Pls
6924 1500 Pls
6961 1454 Pls
6998 1408 Pls
7036 1347 Pls
7073 1468 Pls
7110 1575 Pls
7147 1682 Pls
7185 1790 Pls
7222 1768 Pls
7259 1747 Pls
7297 1725 Pls
7334 1704 Pls
7371 1682 Pls
7409 1661 Pls
7446 1640 Pls
7483 1618 Pls
7520 1985 Pls
7558 2351 Pls
7595 2718 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
882 4859 N
882 576 L
6713 0 V
0 4283 V
-6713 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
